{"version":3,"sources":["Components/App.module.css","Components/service/fetchApi.js","Components/Country.js","Components/Countries.js","Components/App.js","index.js"],"names":["module","exports","fetchApi","query","fetch","then","res","json","data","catch","error","console","Country","item","capital","src","flag","className","css","alt","population","languages","map","el","key","uuidv1","name","Countries","items","App","state","countries","notifyError","toast","notifyInfo","info","notifySuccess","success","fetchCounrties","debaunce","a","setState","warning","length","handleChange","e","target","value","prevProps","prevState","this","container","type","onChange","placeholder","Component","ReactDom","render","document","querySelector"],"mappings":"+JACAA,EAAOC,QAAU,CAAC,UAAY,yB,uMCMfC,G,MAPE,SAAAC,GACf,OAAOC,MAAM,yCAAD,OAA0CD,IACnDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIA,KACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,Q,kCCenBE,EAhBC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACE,6BACE,4CAAaA,EAAKC,SAClB,yBAAKC,IAAKF,EAAKG,KAAMC,UAAWC,IAAKC,IAAI,gBACzC,0CAAgBN,EAAKO,YACrB,yCACA,4BACGP,EAAKQ,UAAUC,KAAI,SAAAC,GAAE,OACpB,wBAAIC,IAAKC,OAAWF,EAAGG,UAG3B,8BCHSC,EAVG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,4BACGA,EAAMN,KAAI,SAAAC,GAAE,OACX,wBAAIC,IAAKD,EAAGH,YAAaG,EAAGG,W,iBCiErBG,E,2MA9DbC,MAAQ,CACN3B,MAAO,GACP4B,UAAW,GACXrB,MAAO,M,EAQTsB,YAAc,kBAAMC,IAAMvB,MAAM,yC,EAChCwB,WAAa,kBAAMD,IAAME,KAAK,6B,EAC9BC,cAAgB,kBAAMH,IAAMI,QAAQ,Q,EAEpCC,eAAiBC,IAAQ,sBAAC,gCAAAC,EAAA,2DACK,EAAKV,MAA1B3B,EADgB,EAChBA,MAAO4B,EADS,EACTA,UACV5B,EAFmB,uBAGtB,EAAK6B,cAHiB,mDAOhB9B,EAASC,GAAOE,MAAK,SAAA0B,GACzB,EAAKU,SAAS,CAAEV,iBARI,uDAWtBE,IAAMS,QAAN,MAXsB,SAapBX,EAAUY,OAAS,GAAKZ,EAAUY,OAAS,KAC7C,EAAKT,aAdiB,yDAgBvB,K,EACHU,aAAe,SAAAC,GACb,EAAKJ,SAAS,CACZtC,MAAO0C,EAAEC,OAAOC,S,kFA5BDC,EAAWC,GACxBA,EAAU9C,QAAU+C,KAAKpB,MAAM3B,OACjC+C,KAAKZ,mB,+BA6BC,IAAD,EACsBY,KAAKpB,MAA1B3B,EADD,EACCA,MAAO4B,EADR,EACQA,UACf,OACE,yBAAKd,UAAWC,IAAIiC,WAClB,iGAGA,8BACE,2BACEC,KAAK,OACLL,MAAO5C,EACPkD,SAAUH,KAAKN,aACfU,YAAY,wBAIfvB,EAAUY,QAAU,IAAM,kBAAC,EAAD,CAAWf,MAAOG,IACvB,IAArBA,EAAUY,QAAgB,kBAAC,EAAD,CAAS9B,KAAMkB,EAAU,KAEpD,kBAAC,IAAD,W,GAzDUwB,aCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.b1bde410.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__33Z87\"};","const fetchApi = query => {\r\n  return fetch(`https://restcountries.eu/rest/v2/name/${query}`)\r\n    .then(res => res.json())\r\n    .then(data => data)\r\n    .catch(error => console.error(error));\r\n};\r\n\r\nexport default fetchApi;\r\n","import React from 'react';\r\nimport uuidv1 from 'uuid';\r\nimport css from './Country.module.css';\r\nconst Country = ({ item }) => {\r\n  return (\r\n    <div>\r\n      <p>Ð¡apital: {item.capital}</p>\r\n      <img src={item.flag} className={css} alt=\"coutry flag\" />\r\n      <p>Population: {item.population}</p>\r\n      <p>Languages:</p>\r\n      <ul>\r\n        {item.languages.map(el => (\r\n          <li key={uuidv1()}>{el.name}</li>\r\n        ))}\r\n      </ul>\r\n      <p></p>\r\n    </div>\r\n  );\r\n};\r\nexport default Country;\r\n","import React from 'react';\r\n\r\nconst Countries = ({ items }) => {\r\n  return (\r\n    <ul>\r\n      {items.map(el => (\r\n        <li key={el.population}>{el.name}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React, { Component } from 'react';\r\nimport debaunce from 'lodash.debounce';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport fetchApi from '../Components/service/fetchApi';\r\nimport Country from './Country';\r\nimport Countries from './Countries';\r\nimport css from './App.module.css';\r\nclass App extends Component {\r\n  state = {\r\n    query: '',\r\n    countries: [],\r\n    error: null,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.query !== this.state.query) {\r\n      this.fetchCounrties();\r\n    }\r\n  }\r\n  notifyError = () => toast.error('QUERY NULL! Make query more specific');\r\n  notifyInfo = () => toast.info('Make query more specific');\r\n  notifySuccess = () => toast.success('www');\r\n\r\n  fetchCounrties = debaunce(async () => {\r\n    const { query, countries } = this.state;\r\n    if (!query) {\r\n      this.notifyError();\r\n      return;\r\n    }\r\n    try {\r\n      await fetchApi(query).then(countries => {\r\n        this.setState({ countries });\r\n      });\r\n    } catch (error) {\r\n      toast.warning(error);\r\n    }\r\n    if (countries.length < 1 || countries.length > 10) {\r\n      this.notifyInfo();\r\n    }\r\n  }, 500);\r\n  handleChange = e => {\r\n    this.setState({\r\n      query: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    const { query, countries } = this.state;\r\n    return (\r\n      <div className={css.container}>\r\n        <h3>\r\n          Search by country name. It can be the native name or partial name\r\n        </h3>\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Search country... \"\r\n          />\r\n        </form>\r\n\r\n        {countries.length <= 10 && <Countries items={countries} />}\r\n        {countries.length === 1 && <Country item={countries[0]} />}\r\n\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDom.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}